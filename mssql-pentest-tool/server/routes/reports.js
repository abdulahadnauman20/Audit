// server/routes/reports.js
const express = require('express');
const router = express.Router();
const fs = require('fs');
const path = require('path');
const { logger } = require('../server');
const { generatePDF } = require('../utils/pdfGenerator');
const archiver = require('archiver');

// Create reports directory if it doesn't exist
const reportDir = path.join(__dirname, '../reports');
if (!fs.existsSync(reportDir)) {
  fs.mkdirSync(reportDir, { recursive: true });
}

// Generate PDF report
router.post('/generate', async (req, res) => {
  const { scanResults, scanType, target } = req.body;
  
  try {
    // Validate input
    if (!scanResults || !scanType || !target) {
      return res.status(400).json({ 
        success: false, 
        error: 'Missing required fields' 
      });
    }

    // Create filename
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    const filename = `report-${scanType}-${timestamp}.pdf`;
    const filepath = path.join(reportDir, filename);
    
    // Generate the PDF
    await generatePDF({
      title: `${scanType} Scan Report`,
      target: target,
      date: new Date().toLocaleString(),
      results: scanResults,
      output: filepath
    });
    
    // Return success response
    res.json({
      success: true,
      message: 'Report generated successfully',
      filename: filename,
      downloadUrl: `/api/reports/download/${filename}`
    });

  } catch (err) {
    logger.error(`PDF generation failed: ${err}`);
    res.status(500).json({ 
      success: false, 
      error: 'Failed to generate report' 
    });
  }
});

// Download report
router.get('/download/:filename', (req, res) => {
  const { filename } = req.params;
  const filepath = path.join(reportDir, filename);
  
  if (fs.existsSync(filepath)) {
    res.download(filepath, `security-report-${filename}`, (err) => {
      if (err) logger.error(`Download failed: ${err}`);
    });
  } else {
    res.status(404).json({ 
      success: false, 
      error: 'Report not found' 
    });
  }
});

// List all reports
router.get('/list', (req, res) => {
  try {
    const reports = fs.readdirSync(reportDir)
      .filter(file => file.endsWith('.pdf'))
      .map(file => ({
        name: file,
        date: fs.statSync(path.join(reportDir, file)).birthtime,
        size: fs.statSync(path.join(reportDir, file)).size
      }));
    
    res.json({ 
      success: true, 
      reports: reports 
    });
  } catch (err) {
    logger.error(`Failed to list reports: ${err}`);
    res.status(500).json({ 
      success: false, 
      error: 'Failed to list reports' 
    });
  }
});

// Delete a report
router.delete('/delete/:filename', (req, res) => {
  const { filename } = req.params;
  const filepath = path.join(reportDir, filename);
  
  try {
    if (fs.existsSync(filepath)) {
      fs.unlinkSync(filepath);
      res.json({ 
        success: true, 
        message: 'Report deleted successfully' 
      });
    } else {
      res.status(404).json({ 
        success: false, 
        error: 'Report not found' 
      });
    }
  } catch (err) {
    logger.error(`Failed to delete report: ${err}`);
    res.status(500).json({ 
      success: false, 
      error: 'Failed to delete report' 
    });
  }
});

module.exports = router;